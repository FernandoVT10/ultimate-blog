components:
  requestBodies:
    CreateComment:
      type: object
      required: [authorName, content, parentModel, parentId]
      properties:
        authorName:
          type: string
        content:
          type: string
        parentModel:
          type: string
          enum: [BlogPost, Comment]
        parentId:
          type: string

tags: [name: comment]
paths:
  /comments:
    post:
      tags: [comment]
      summary: Creates a comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/CreateComment"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/requestBodies/CreateComment"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        400:
          content:
            application/json:
              schema:
                $ref: "#/components/responses/ValidationErrorResponse"
        404:
          description: Blog Post or Comment not found
    get:
      tags: [comment]
      summary: Gets all comments
      parameters:
        - in: query
          name: parentId
          schema:
            type: string
          required: true
          description: The id of the comments' parent
        - in: query
          name: parentModel
          schema:
            type: string
            enum: [BlogPost, Comment]
          required: true
          description: Parent type (e.g. BlogPost, Comment)
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: "#/components/schemas/Comment"
                    - type: object
                      properties:
                        repliesCount:
                          type: number
        400:
          content:
            application/json:
              schema:
                $ref: "#/components/responses/ValidationErrorResponse"
        404:
          description: Parent not found

  /comments/{commentId}:
    delete:
      security:
        - BearerAuth: []
      tags: [comment]
      summary: Deletes a comment using its id
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        404:
          description: Comment not found
